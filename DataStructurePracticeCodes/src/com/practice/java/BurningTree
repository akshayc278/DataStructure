package com.test;

import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.stream.Collectors;

class TreeNode{
	TreeNode left;
	TreeNode right;
	int data;
	TreeNode(int data){
		this.data=data;
	}
}
class TwoD{
	int x;
	int y;
	TwoD(int x,int y){
		this.x=x;
		this.y=y;
	}
}
public class Burningtree {
	public List<TwoD> traverseData(TreeNode node){
		List<TwoD> listOfNodes=new LinkedList<>();
		Stack<TreeNode> st=new Stack<TreeNode>();
		st.add(node);
		boolean flag=true;
		while(!st.isEmpty()) {
			TreeNode t=st.pop();
			
			if(t.left!=null) {
				st.push(t.left);
				TwoD d=new TwoD(t.data, t.left.data);
				listOfNodes.add(d);
			}
			if(t.right!=null) {
				st.push(t.right);
				TwoD d=new TwoD(t.data, t.right.data);
				listOfNodes.add(d);
			}
		}
		
		return listOfNodes;
	}
	public void burningNode(TreeNode node,int leaf){
		
		List<TwoD> data=traverseData(node);
		data.stream().forEach(x-> System.out.println(x.x+"  "+x.y));
		for(int i=0;i<data.size();i++) {
			if(data.get(i).x==leaf) {
				System.out.println("Immediate burning node is "+data.get(i).y);
			}
			if(data.get(i).y==leaf) {
				System.out.println("Immediate burning node is "+data.get(i).x);
			}
		}
	}
	
	public static void main(String[] args) {
		TreeNode n1=new TreeNode(1);
		n1.left=new TreeNode(2);
		n1.right=new TreeNode(3);
		n1.right.right=new TreeNode(4);
		n1.right.right.left=new TreeNode(5);
		//System.out.println(n1.left.data);
		Burningtree bt=new Burningtree();
		bt.burningNode(n1, 4);
	}
}
